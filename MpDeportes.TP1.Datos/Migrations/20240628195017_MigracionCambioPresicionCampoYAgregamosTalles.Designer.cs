// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MpDeportes.TP1.Datos;

#nullable disable

namespace MpDeportes.TP1.Datos.Migrations
{
    [DbContext(typeof(MpDeportesDbContext))]
    [Migration("20240628195017_MigracionCambioPresicionCampoYAgregamosTalles")]
    partial class MigracionCambioPresicionCampoYAgregamosTalles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BrandId");

                    b.HasIndex("BrandName")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Adidas"
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "Reebook"
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "Nike"
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorId");

                    b.HasIndex("ColorName")
                        .IsUnique();

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            ColorName = "Red"
                        },
                        new
                        {
                            ColorId = 2,
                            ColorName = "Blue"
                        },
                        new
                        {
                            ColorId = 3,
                            ColorName = "Green"
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GenreId");

                    b.HasIndex("GenreName")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Masculino"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Femenino"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Unisex"
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Shoe", b =>
                {
                    b.Property<int>("ShoeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoeId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("ShoeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("SportId");

                    b.HasIndex("Model", "Description", "Price")
                        .IsUnique();

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            ShoeId = 1,
                            BrandId = 1,
                            ColorId = 1,
                            Description = "Estilo urbano y cultura pop",
                            GenreId = 1,
                            Model = "Adidas Superstar",
                            Price = 99.99m,
                            SportId = 1
                        },
                        new
                        {
                            ShoeId = 2,
                            BrandId = 2,
                            ColorId = 2,
                            Description = "Diseñadas para ofrecer estabilidad y versatilidad en cada movimiento",
                            GenreId = 2,
                            Model = "Nano X1",
                            Price = 129.99m,
                            SportId = 2
                        },
                        new
                        {
                            ShoeId = 3,
                            BrandId = 3,
                            ColorId = 3,
                            Description = " Opción versátil y cómoda para correr",
                            GenreId = 3,
                            Model = "Air Zoom ",
                            Price = 79.99m,
                            SportId = 3
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<decimal>("SizeNumber")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("SizeId");

                    b.HasIndex("SizeNumber")
                        .IsUnique();

                    b.ToTable("Sizes", (string)null);

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            SizeNumber = 28m
                        },
                        new
                        {
                            SizeId = 2,
                            SizeNumber = 28.5m
                        },
                        new
                        {
                            SizeId = 3,
                            SizeNumber = 29.0m
                        },
                        new
                        {
                            SizeId = 4,
                            SizeNumber = 29.5m
                        },
                        new
                        {
                            SizeId = 5,
                            SizeNumber = 30.0m
                        },
                        new
                        {
                            SizeId = 6,
                            SizeNumber = 30.5m
                        },
                        new
                        {
                            SizeId = 7,
                            SizeNumber = 31.0m
                        },
                        new
                        {
                            SizeId = 8,
                            SizeNumber = 31.5m
                        },
                        new
                        {
                            SizeId = 9,
                            SizeNumber = 32.0m
                        },
                        new
                        {
                            SizeId = 10,
                            SizeNumber = 32.5m
                        },
                        new
                        {
                            SizeId = 11,
                            SizeNumber = 33.0m
                        },
                        new
                        {
                            SizeId = 12,
                            SizeNumber = 33.5m
                        },
                        new
                        {
                            SizeId = 13,
                            SizeNumber = 34.0m
                        },
                        new
                        {
                            SizeId = 14,
                            SizeNumber = 34.5m
                        },
                        new
                        {
                            SizeId = 15,
                            SizeNumber = 35.0m
                        },
                        new
                        {
                            SizeId = 16,
                            SizeNumber = 35.5m
                        },
                        new
                        {
                            SizeId = 17,
                            SizeNumber = 36.0m
                        },
                        new
                        {
                            SizeId = 18,
                            SizeNumber = 36.5m
                        },
                        new
                        {
                            SizeId = 19,
                            SizeNumber = 37.0m
                        },
                        new
                        {
                            SizeId = 20,
                            SizeNumber = 37.5m
                        },
                        new
                        {
                            SizeId = 21,
                            SizeNumber = 38.0m
                        },
                        new
                        {
                            SizeId = 22,
                            SizeNumber = 38.5m
                        },
                        new
                        {
                            SizeId = 23,
                            SizeNumber = 39.0m
                        },
                        new
                        {
                            SizeId = 24,
                            SizeNumber = 39.5m
                        },
                        new
                        {
                            SizeId = 25,
                            SizeNumber = 40.0m
                        },
                        new
                        {
                            SizeId = 26,
                            SizeNumber = 40.5m
                        },
                        new
                        {
                            SizeId = 27,
                            SizeNumber = 41.0m
                        },
                        new
                        {
                            SizeId = 28,
                            SizeNumber = 41.5m
                        },
                        new
                        {
                            SizeId = 29,
                            SizeNumber = 42.0m
                        },
                        new
                        {
                            SizeId = 30,
                            SizeNumber = 42.5m
                        },
                        new
                        {
                            SizeId = 31,
                            SizeNumber = 43.0m
                        },
                        new
                        {
                            SizeId = 32,
                            SizeNumber = 43.5m
                        },
                        new
                        {
                            SizeId = 33,
                            SizeNumber = 44.0m
                        },
                        new
                        {
                            SizeId = 34,
                            SizeNumber = 44.5m
                        },
                        new
                        {
                            SizeId = 35,
                            SizeNumber = 45.0m
                        },
                        new
                        {
                            SizeId = 36,
                            SizeNumber = 45.5m
                        },
                        new
                        {
                            SizeId = 37,
                            SizeNumber = 46.0m
                        },
                        new
                        {
                            SizeId = 38,
                            SizeNumber = 46.5m
                        },
                        new
                        {
                            SizeId = 39,
                            SizeNumber = 47.0m
                        },
                        new
                        {
                            SizeId = 40,
                            SizeNumber = 47.5m
                        },
                        new
                        {
                            SizeId = 41,
                            SizeNumber = 48.0m
                        },
                        new
                        {
                            SizeId = 42,
                            SizeNumber = 48.5m
                        },
                        new
                        {
                            SizeId = 43,
                            SizeNumber = 49.0m
                        },
                        new
                        {
                            SizeId = 44,
                            SizeNumber = 49.5m
                        },
                        new
                        {
                            SizeId = 45,
                            SizeNumber = 50.0m
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"));

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SportId");

                    b.HasIndex("SportName")
                        .IsUnique();

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportId = 1,
                            SportName = "Running"
                        },
                        new
                        {
                            SportId = 2,
                            SportName = "Basketball"
                        },
                        new
                        {
                            SportId = 3,
                            SportName = "Soccer"
                        });
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Shoe", b =>
                {
                    b.HasOne("MpDeportes.TP1.Entidades.Brand", "Brand")
                        .WithMany("Shoes")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Shoes_Brands");

                    b.HasOne("MpDeportes.TP1.Entidades.Color", "Color")
                        .WithMany("Shoes")
                        .HasForeignKey("ColorId")
                        .IsRequired()
                        .HasConstraintName("FK_Shoes_Colors");

                    b.HasOne("MpDeportes.TP1.Entidades.Genre", "Genre")
                        .WithMany("Shoes")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_Shoes_Genres");

                    b.HasOne("MpDeportes.TP1.Entidades.Sport", "Sport")
                        .WithMany("Shoes")
                        .HasForeignKey("SportId")
                        .IsRequired()
                        .HasConstraintName("FK_Shoes_Sports");

                    b.Navigation("Brand");

                    b.Navigation("Color");

                    b.Navigation("Genre");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Brand", b =>
                {
                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Color", b =>
                {
                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Genre", b =>
                {
                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("MpDeportes.TP1.Entidades.Sport", b =>
                {
                    b.Navigation("Shoes");
                });
#pragma warning restore 612, 618
        }
    }
}
